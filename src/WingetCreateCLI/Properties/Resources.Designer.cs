//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.WingetCreateCLI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.WingetCreateCLI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADD.
        /// </summary>
        public static string Add_MenuItem {
            get {
                return ResourceManager.GetString("Add_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to add additional locale properties?.
        /// </summary>
        public static string AddAdditionalLocaleProperties_Message {
            get {
                return ResourceManager.GetString("AddAdditionalLocaleProperties_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional metadata needed for installer from {0}.
        /// </summary>
        public static string AdditionalMetadataNeeded_Message {
            get {
                return ResourceManager.GetString("AdditionalMetadataNeeded_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The additional properties for future minor version compatibility.
        /// </summary>
        public static string AdditionalProperties_KeywordDescription {
            get {
                return ResourceManager.GetString("AdditionalProperties_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADD NEW ITEM.
        /// </summary>
        public static string AddNewItem_MenuItem {
            get {
                return ResourceManager.GetString("AddNewItem_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The agreement text content.
        /// </summary>
        public static string Agreement_KeywordDescription {
            get {
                return ResourceManager.GetString("Agreement_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The agreement text content.
        /// </summary>
        public static string AgreementContent_KeywordDescription {
            get {
                return ResourceManager.GetString("AgreementContent_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The label of the Agreement. i.e. EULA, AgeRating, etc. This field should be localized. Either Agreement or AgreementUrl is required. When we show the agreements, we would Bold the AgreementLabel.
        /// </summary>
        public static string AgreementLabel_KeywordDescription {
            get {
                return ResourceManager.GetString("AgreementLabel_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The agreements for the package.
        /// </summary>
        public static string Agreements_KeywordDescription {
            get {
                return ResourceManager.GetString("Agreements_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The agreement URL.
        /// </summary>
        public static string AgreementUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("AgreementUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALL INSTALLERS.
        /// </summary>
        public static string AllInstallers_MenuItem {
            get {
                return ResourceManager.GetString("AllInstallers_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The included installer target markets.
        /// </summary>
        public static string AllowedMarkets_KeywordDescription {
            get {
                return ResourceManager.GetString("AllowedMarkets_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest creation command line utility generates manifest for submitting apps to the Windows Package Manager repo..
        /// </summary>
        public static string AppDescription_HelpText {
            get {
                return ResourceManager.GetString("AppDescription_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The most common package term.
        /// </summary>
        public static string AppMoniker_KeywordDescription {
            get {
                return ResourceManager.GetString("AppMoniker_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Various key values under installer&apos;s ARP entry.
        /// </summary>
        public static string AppsAndFeaturesEntries_KeywordDescription {
            get {
                return ResourceManager.GetString("AppsAndFeaturesEntries_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer target architecture.
        /// </summary>
        public static string Arch_KeywordDescription {
            get {
                return ResourceManager.GetString("Arch_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer target architecture.
        /// </summary>
        public static string Architecture_KeywordDescription {
            get {
                return ResourceManager.GetString("Architecture_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the installer you provided fails to match an existing installer even when overriding the architecture, you may need to override the scope or edit the existing manifest manually. Make sure that the existing manifest has a single installer that matches the overriding architecture, scope and installer type of the new installer. To modify an existing manifest, use the &apos;--interactive&apos; flag with the update command and submit the new changes. Once the changes are published, please try again..
        /// </summary>
        public static string ArchitectureOverride_Warning {
            get {
                return ResourceManager.GetString("ArchitectureOverride_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package author.
        /// </summary>
        public static string Author_KeywordDescription {
            get {
                return ResourceManager.GetString("Author_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vanity URL detected. The submission will automatically replace the previous version..
        /// </summary>
        public static string AutoReplacingPreviousVersion_Message {
            get {
                return ResourceManager.GetString("AutoReplacingPreviousVersion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BACK.
        /// </summary>
        public static string Back_MenuItem {
            get {
                return ResourceManager.GetString("Back_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web browser failed to launch: {0}.
        /// </summary>
        public static string BrowserFailedToLaunch_Error {
            get {
                return ResourceManager.GetString("BrowserFailedToLaunch_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage downloaded installers stored in cache.
        /// </summary>
        public static string CacheCommand_HelpText {
            get {
                return ResourceManager.GetString("CacheCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of MSIX capabilities.
        /// </summary>
        public static string Capabilities_KeywordDescription {
            get {
                return ResourceManager.GetString("Capabilities_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output directory changed to current directory: {0}.
        /// </summary>
        public static string ChangeOutputDirToCurrDir_Message {
            get {
                return ResourceManager.GetString("ChangeOutputDirToCurrDir_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The distribution channel.
        /// </summary>
        public static string Channel_KeywordDescription {
            get {
                return ResourceManager.GetString("Channel_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes all downloaded installers in the cache folder.
        /// </summary>
        public static string Clean_HelpText {
            get {
                return ResourceManager.GetString("Clean_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear the cached GitHub token.
        /// </summary>
        public static string Clear_HelpText {
            get {
                return ResourceManager.GetString("Clear_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing GitHub token cache.
        /// </summary>
        public static string ClearToken_Message {
            get {
                return ResourceManager.GetString("ClearToken_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of commands or aliases to run the package.
        /// </summary>
        public static string Commands_KeywordDescription {
            get {
                return ResourceManager.GetString("Commands_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following commands are available:.
        /// </summary>
        public static string CommandsAvailable_Message {
            get {
                return ResourceManager.GetString("CommandsAvailable_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please ensure that the updated manifest you are submitting is different from the existing package..
        /// </summary>
        public static string CompareUpdatedManifestWithExisting_Message {
            get {
                return ResourceManager.GetString("CompareUpdatedManifestWithExisting_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to submit your manifest to the Windows Package Manager repository?.
        /// </summary>
        public static string ConfirmGitHubSubmitManifest_Message {
            get {
                return ResourceManager.GetString("ConfirmGitHubSubmitManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to make changes to this manifest?.
        /// </summary>
        public static string ConfirmManifestCreation_Message {
            get {
                return ResourceManager.GetString("ConfirmManifestCreation_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is this a portable package?.
        /// </summary>
        public static string ConfirmPortablePackage_Message {
            get {
                return ResourceManager.GetString("ConfirmPortablePackage_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package copyright.
        /// </summary>
        public static string Copyright_KeywordDescription {
            get {
                return ResourceManager.GetString("Copyright_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package copyright page.
        /// </summary>
        public static string CopyrightUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("CopyrightUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to create another locale?.
        /// </summary>
        public static string CreateAnotherLocale_Message {
            get {
                return ResourceManager.GetString("CreateAnotherLocale_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom installer switches.
        /// </summary>
        public static string Custom_KeywordDescription {
            get {
                return ResourceManager.GetString("Custom_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Represents the default installed package location. Used for deeper installation detection.
        /// </summary>
        public static string DefaultInstallLocation_KeywordDescription {
            get {
                return ResourceManager.GetString("DefaultInstallLocation_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package meta-data default locale |e.g. en-US|.
        /// </summary>
        public static string DefaultLocale_KeywordDescription {
            get {
                return ResourceManager.GetString("DefaultLocale_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default locale.
        /// </summary>
        public static string DefaultLocale_MenuItem {
            get {
                return ResourceManager.GetString("DefaultLocale_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the default locale manifest of the package..
        /// </summary>
        public static string DefaultLocaleManifest_HelpText {
            get {
                return ResourceManager.GetString("DefaultLocaleManifest_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Locale ({0}) Manifest:.
        /// </summary>
        public static string DefaultLocaleManifest_Message {
            get {
                return ResourceManager.GetString("DefaultLocaleManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default locale manifest preview:.
        /// </summary>
        public static string DefaultLocaleManifestPreview_Message {
            get {
                return ResourceManager.GetString("DefaultLocaleManifestPreview_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation did not complete successfully because the downloaded file contains a virus or potentially unwanted software. For more information on potentially unwanted software and what options are available, see https://aka.ms/winget-create-security.
        /// </summary>
        public static string DefenderVirus_ErrorMessage {
            get {
                return ResourceManager.GetString("DefenderVirus_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cached token was invalid, deleting token from cache....
        /// </summary>
        public static string DeletingInvalidCachedToken_Message {
            get {
                return ResourceManager.GetString("DeletingInvalidCachedToken_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting {0}.
        /// </summary>
        public static string DeletingItem_Message {
            get {
                return ResourceManager.GetString("DeletingItem_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection of package dependencies.
        /// </summary>
        public static string Dependencies_KeywordDescription {
            get {
                return ResourceManager.GetString("Dependencies_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full package description.
        /// </summary>
        public static string Description_KeywordDescription {
            get {
                return ResourceManager.GetString("Description_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The architecture detected from the binary might be different than what is specified in the installer URL for the following installer(s):.
        /// </summary>
        public static string DetectedArchMismatch_Message {
            get {
                return ResourceManager.GetString("DetectedArchMismatch_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} directories found in {1}.
        /// </summary>
        public static string DirectoriesFound_Message {
            get {
                return ResourceManager.GetString("DirectoriesFound_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to discard this update and start over?.
        /// </summary>
        public static string DiscardUpdateAndStartOver_Message {
            get {
                return ResourceManager.GetString("DiscardUpdateAndStartOver_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether winget should display a warning message if the install or upgrade is known to interfere with running applications.
        /// </summary>
        public static string DisplayInstallWarnings_KeywordDescription {
            get {
                return ResourceManager.GetString("DisplayInstallWarnings_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DisplayName of the package or file.
        /// </summary>
        public static string DisplayName_KeywordDescription {
            get {
                return ResourceManager.GetString("DisplayName_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DISPLAY PREVIEW.
        /// </summary>
        public static string DisplayPreview_MenuItem {
            get {
                return ResourceManager.GetString("DisplayPreview_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displaying preview of [{0}]:.
        /// </summary>
        public static string DisplayPreviewOfItems {
            get {
                return ResourceManager.GetString("DisplayPreviewOfItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displaying a preview of the selected installer:.
        /// </summary>
        public static string DisplayPreviewOfSelectedInstaller_Message {
            get {
                return ResourceManager.GetString("DisplayPreviewOfSelectedInstaller_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DisplayVersion registry value.
        /// </summary>
        public static string DisplayVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("DisplayVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of documentation.
        /// </summary>
        public static string Documentations_KeywordDescription {
            get {
                return ResourceManager.GetString("Documentations_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The label of the documentation for providing software guides such as manuals and troubleshooting URLs.
        /// </summary>
        public static string DocumentLabel_KeywordDescription {
            get {
                return ResourceManager.GetString("DocumentLabel_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The documentation URL.
        /// </summary>
        public static string DocumentUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("DocumentUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DONE.
        /// </summary>
        public static string Done_MenuItem {
            get {
                return ResourceManager.GetString("Done_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DONE.
        /// </summary>
        public static string DoneSymbol_String {
            get {
                return ResourceManager.GetString("DoneSymbol_String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the installer is prohibited from being downloaded for offline installation.
        /// </summary>
        public static string DownloadCommandProhibited_KeywordDescription {
            get {
                return ResourceManager.GetString("DownloadCommandProhibited_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to complete the download request as the connection has timed out. Please verify your installer URL and try again..
        /// </summary>
        public static string DownloadConnectionTimeout_Error {
            get {
                return ResourceManager.GetString("DownloadConnectionTimeout_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to download installer..
        /// </summary>
        public static string DownloadFile_Error {
            get {
                return ResourceManager.GetString("DownloadFile_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL points to file larger than the maximum size of {0}MB.
        /// </summary>
        public static string DownloadFileExceedsMaxSize_Error {
            get {
                return ResourceManager.GetString("DownloadFileExceedsMaxSize_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading and parsing: {0}....
        /// </summary>
        public static string DownloadInstaller_Message {
            get {
                return ResourceManager.GetString("DownloadInstaller_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to edit your manifests?.
        /// </summary>
        public static string EditManifests_Message {
            get {
                return ResourceManager.GetString("EditManifests_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to edit the {0} field?.
        /// </summary>
        public static string EditObjectTypeField_Message {
            get {
                return ResourceManager.GetString("EditObjectTypeField_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer&apos;s elevation requirement.
        /// </summary>
        public static string ElevationRequirement_KeywordDescription {
            get {
                return ResourceManager.GetString("ElevationRequirement_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter values for the following fields:.
        /// </summary>
        public static string EnterFollowingFields_Message {
            get {
                return ResourceManager.GetString("EnterFollowingFields_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the following user verification code when prompted: {0}.
        /// </summary>
        public static string EnterUserCode_Message {
            get {
                return ResourceManager.GetString("EnterUserCode_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: {0}.
        /// </summary>
        public static string Error_Prefix {
            get {
                return ResourceManager.GetString("Error_Prefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing file: {0}..
        /// </summary>
        public static string ErrorParsingSettingsFile_Message {
            get {
                return ResourceManager.GetString("ErrorParsingSettingsFile_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download installer and extract metadata.
        /// </summary>
        public static string Example_NewCommand_DownloadInstaller {
            get {
                return ResourceManager.GetString("Example_NewCommand_DownloadInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save locally and submit a pull request.
        /// </summary>
        public static string Example_NewCommand_SaveLocallyOrSubmit {
            get {
                return ResourceManager.GetString("Example_NewCommand_SaveLocallyOrSubmit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start from scratch.
        /// </summary>
        public static string Example_NewCommand_StartFromScratch {
            get {
                return ResourceManager.GetString("Example_NewCommand_StartFromScratch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a new locale for the latest version of a package.
        /// </summary>
        public static string Example_NewLocaleCommand_AddForLatestVersion {
            get {
                return ResourceManager.GetString("Example_NewLocaleCommand_AddForLatestVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a new locale for a specific version of a package.
        /// </summary>
        public static string Example_NewLocaleCommand_AddForSpecificVersion {
            get {
                return ResourceManager.GetString("Example_NewLocaleCommand_AddForSpecificVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new locale and save the generated manifests to a specified directory.
        /// </summary>
        public static string Example_NewLocaleCommand_SaveToDirectory {
            get {
                return ResourceManager.GetString("Example_NewLocaleCommand_SaveToDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show the latest manifest of an existing package from the Windows Package Manager repo.
        /// </summary>
        public static string Example_ShowCommand_DisplayLatestManifest {
            get {
                return ResourceManager.GetString("Example_ShowCommand_DisplayLatestManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show the manifests of a specified version of the package.
        /// </summary>
        public static string Example_ShowCommand_DisplaySpecifiedVersion {
            get {
                return ResourceManager.GetString("Example_ShowCommand_DisplaySpecifiedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show only the installer and default locale manifests.
        /// </summary>
        public static string Example_ShowCommand_ShowInstallerAndDefaultLocale {
            get {
                return ResourceManager.GetString("Example_ShowCommand_ShowInstallerAndDefaultLocale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submit local manifest file to Windows Package Manager repo.
        /// </summary>
        public static string Example_SubmitCommand_SubmitLocalManifest {
            get {
                return ResourceManager.GetString("Example_SubmitCommand_SubmitLocalManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear the cached GitHub token.
        /// </summary>
        public static string Example_TokenCommand_ClearExistingToken {
            get {
                return ResourceManager.GetString("Example_TokenCommand_ClearExistingToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store a new GitHub token in your local cache.
        /// </summary>
        public static string Example_TokenCommand_StoreNewToken {
            get {
                return ResourceManager.GetString("Example_TokenCommand_StoreNewToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override the architecture of an installer.
        /// </summary>
        public static string Example_UpdateCommand_OverrideArchitecture {
            get {
                return ResourceManager.GetString("Example_UpdateCommand_OverrideArchitecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override the scope of an installer.
        /// </summary>
        public static string Example_UpdateCommand_OverrideScope {
            get {
                return ResourceManager.GetString("Example_UpdateCommand_OverrideScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save and publish updated manifest.
        /// </summary>
        public static string Example_UpdateCommand_SaveAndPublish {
            get {
                return ResourceManager.GetString("Example_UpdateCommand_SaveAndPublish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for an existing manifest and update the installer url and version.
        /// </summary>
        public static string Example_UpdateCommand_SearchAndUpdateVersionAndInstallerURL {
            get {
                return ResourceManager.GetString("Example_UpdateCommand_SearchAndUpdateVersionAndInstallerURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update an existing manifest and submit PR to GitHub.
        /// </summary>
        public static string Example_UpdateCommand_SubmitToGitHub {
            get {
                return ResourceManager.GetString("Example_UpdateCommand_SubmitToGitHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update existing locale and save the generated manifests to a specified directory.
        /// </summary>
        public static string Example_UpdateLocaleCommand_SaveToDirectory {
            get {
                return ResourceManager.GetString("Example_UpdateLocaleCommand_SaveToDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update existing locale for the latest version of a package.
        /// </summary>
        public static string Example_UpdateLocaleCommand_UpdateForLatestVersion {
            get {
                return ResourceManager.GetString("Example_UpdateLocaleCommand_UpdateForLatestVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update existing locale for a specific version of a package.
        /// </summary>
        public static string Example_UpdateLocaleCommand_UpdateForSpecificVersion {
            get {
                return ResourceManager.GetString("Example_UpdateLocaleCommand_UpdateForSpecificVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The excluded installer target markets.
        /// </summary>
        public static string ExcludedMarkets_KeywordDescription {
            get {
                return ResourceManager.GetString("ExcludedMarkets_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution of the command is paused until the GitHub login has been completed. .
        /// </summary>
        public static string ExecutionPaused_Message {
            get {
                return ResourceManager.GetString("ExecutionPaused_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer exit codes for common errors.
        /// </summary>
        public static string ExpectedReturnCodes_KeywordDescription {
            get {
                return ResourceManager.GetString("ExpectedReturnCodes_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of external package dependencies.
        /// </summary>
        public static string ExternalDependencies_KeywordDescription {
            get {
                return ResourceManager.GetString("ExternalDependencies_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] value is: {1}.
        /// </summary>
        public static string FieldSetToValue_Message {
            get {
                return ResourceManager.GetString("FieldSetToValue_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] value is.
        /// </summary>
        public static string FieldValueIs_Message {
            get {
                return ResourceManager.GetString("FieldValueIs_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of file extensions the package could support.
        /// </summary>
        public static string FileExtensions_KeywordDescription {
            get {
                return ResourceManager.GetString("FileExtensions_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of installed files.
        /// </summary>
        public static string Files_KeywordDescription {
            get {
                return ResourceManager.GetString("Files_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The optional Sha256 of the installed file.
        /// </summary>
        public static string FileSha256_KeywordDescription {
            get {
                return ResourceManager.GetString("FileSha256_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The optional installed file type.
        /// </summary>
        public static string FileType_KeywordDescription {
            get {
                return ResourceManager.GetString("FileType_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter menu items by typing a search query below..
        /// </summary>
        public static string FilterMenuItems_Message {
            get {
                return ResourceManager.GetString("FilterMenuItems_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format not supported. The Windows Package Manager Community repository accepts only &quot;yaml&quot; manifest submissions..
        /// </summary>
        public static string FormatNotSupportedForDefaultRepo_Error {
            get {
                return ResourceManager.GetString("FormatNotSupportedForDefaultRepo_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating a preview of your manifests....
        /// </summary>
        public static string GenerateManifestPreview_Message {
            get {
                return ResourceManager.GetString("GenerateManifestPreview_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating a preview of the created locale(s).....
        /// </summary>
        public static string GenerateNewLocalePreview_Message {
            get {
                return ResourceManager.GetString("GenerateNewLocalePreview_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No settings file found, generating new settings file from loaded settings....
        /// </summary>
        public static string GenerateNewSettingsFile_Message {
            get {
                return ResourceManager.GetString("GenerateNewSettingsFile_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating a preview of the updated locale(s).....
        /// </summary>
        public static string GenerateUpdatedLocalePreview_Message {
            get {
                return ResourceManager.GetString("GenerateUpdatedLocalePreview_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For the latest version ({0}), go to {1}.
        /// </summary>
        public static string GetLatestVersion_Message {
            get {
                return ResourceManager.GetString("GetLatestVersion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A GitHub account or personal access token must be linked in order to continue with this command. .
        /// </summary>
        public static string GitHubAccountMustBeLinked_Message {
            get {
                return ResourceManager.GetString("GitHubAccountMustBeLinked_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub authorization failed: {0} - {1}.
        /// </summary>
        public static string GitHubFailedAuthorization_Message {
            get {
                return ResourceManager.GetString("GitHubFailedAuthorization_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub login failed..
        /// </summary>
        public static string GitHubLoginFail_Error {
            get {
                return ResourceManager.GetString("GitHubLoginFail_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub personal access token used for direct submission to the Windows Package Manager repo. If no token is provided, tool will prompt for GitHub login credentials..
        /// </summary>
        public static string GitHubToken_HelpText {
            get {
                return ResourceManager.GetString("GitHubToken_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Package Manager Manifest Creator v{0}.
        /// </summary>
        public static string Heading {
            get {
                return ResourceManager.GetString("Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Homepage.
        /// </summary>
        public static string Homepage_Heading {
            get {
                return ResourceManager.GetString("Homepage_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The home page for the package.
        /// </summary>
        public static string Homepage_KeywordDescription {
            get {
                return ResourceManager.GetString("Homepage_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP response was unsuccessful. Status code: {0}.
        /// </summary>
        public static string HttpResponseUnsuccessful_Error {
            get {
                return ResourceManager.GetString("HttpResponseUnsuccessful_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The icon file type.
        /// </summary>
        public static string IconFileType_KeywordDescription {
            get {
                return ResourceManager.GetString("IconFileType_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The icon resolution.
        /// </summary>
        public static string IconResolution_KeywordDescription {
            get {
                return ResourceManager.GetString("IconResolution_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of icons.
        /// </summary>
        public static string Icons_KeywordDescription {
            get {
                return ResourceManager.GetString("Icons_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SHA256 hash of the icon file.
        /// </summary>
        public static string IconSha256_KeywordDescription {
            get {
                return ResourceManager.GetString("IconSha256_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The icon theme.
        /// </summary>
        public static string IconTheme_KeywordDescription {
            get {
                return ResourceManager.GetString("IconTheme_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The url of the hosted icon file.
        /// </summary>
        public static string IconUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("IconUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays general info of the tool.
        /// </summary>
        public static string InfoCommand_HelpText {
            get {
                return ResourceManager.GetString("InfoCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initiating GitHub login....
        /// </summary>
        public static string InitiatingGitHubLogin_Message {
            get {
                return ResourceManager.GetString("InitiatingGitHubLogin_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details about the installation. Used for deeper installation detection.
        /// </summary>
        public static string InstallationMetadata_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallationMetadata_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The notes displayed to the user upon completion of a package installation.
        /// </summary>
        public static string InstallationNotes_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallationNotes_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the installer will abort terminal. Default is false.
        /// </summary>
        public static string InstallerAbortsTerminal_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerAbortsTerminal_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer target architecture.
        /// </summary>
        public static string InstallerArchitecture_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerArchitecture_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using architecture detected from URL ({0}), overriding architecture detected from binary ({1}).
        /// </summary>
        public static string InstallerBinaryMismatch_Message {
            get {
                return ResourceManager.GetString("InstallerBinaryMismatch_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer cache.
        /// </summary>
        public static string InstallerCache_Heading {
            get {
                return ResourceManager.GetString("InstallerCache_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer cache cleaned..
        /// </summary>
        public static string InstallerCacheCleaned_Message {
            get {
                return ResourceManager.GetString("InstallerCacheCleaned_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of new installer packages must match the number of existing installer packages..
        /// </summary>
        public static string InstallerCountMustMatch_Error {
            get {
                return ResourceManager.GetString("InstallerCountMustMatch_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package installer locale.
        /// </summary>
        public static string InstallerLocale_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerLocale_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the installer manifest of the package..
        /// </summary>
        public static string InstallerManifest_HelpText {
            get {
                return ResourceManager.GetString("InstallerManifest_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer Manifest:.
        /// </summary>
        public static string InstallerManifest_Message {
            get {
                return ResourceManager.GetString("InstallerManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer manifest preview:.
        /// </summary>
        public static string InstallerManifestPreview_Message {
            get {
                return ResourceManager.GetString("InstallerManifestPreview_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following installers failed to match an existing installer node:.
        /// </summary>
        public static string InstallerMatchFailedError_Message {
            get {
                return ResourceManager.GetString("InstallerMatchFailedError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exit code that can be returned by the installer after execution.
        /// </summary>
        public static string InstallerReturnCode_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerReturnCode_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection of installers.
        /// </summary>
        public static string Installers_KeywordDescription {
            get {
                return ResourceManager.GetString("Installers_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSTALLER {0}: {1}.
        /// </summary>
        public static string InstallerSelection_MenuItem {
            get {
                return ResourceManager.GetString("InstallerSelection_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} installers found in {1}.
        /// </summary>
        public static string InstallersFound_Message {
            get {
                return ResourceManager.GetString("InstallersFound_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SHA256 installer hash.
        /// </summary>
        public static string InstallerSha256_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerSha256_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of non-zero installer success exit codes.
        /// </summary>
        public static string InstallerSuccessCodes_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerSuccessCodes_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection of installer switches.
        /// </summary>
        public static string InstallerSwitches_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerSwitches_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer type.
        /// </summary>
        public static string InstallerType_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerType_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer updated successfully!.
        /// </summary>
        public static string InstallerUpdatedSuccessfully_Message {
            get {
                return ResourceManager.GetString("InstallerUpdatedSuccessfully_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer Url(s) used to extract relevant metadata for generating a manifest.
        /// </summary>
        public static string InstallerUrl_HelpText {
            get {
                return ResourceManager.GetString("InstallerUrl_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer URL(s) |e.g. https://microsoft.com/foo.exe, https://microsoft.com/bar.msix|.
        /// </summary>
        public static string InstallerUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer location redirection path.
        /// </summary>
        public static string InstallLocation_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallLocation_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the installer requires an install location provided.
        /// </summary>
        public static string InstallLocationRequired_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallLocationRequired_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of supported installer modes.
        /// </summary>
        public static string InstallModes_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallModes_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interactive installer switches.
        /// </summary>
        public static string Interactive_KeywordDescription {
            get {
                return ResourceManager.GetString("Interactive_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boolean value for making the update command interactive. If true, the tool will prompt the user for input. Default is false..
        /// </summary>
        public static string InteractiveUpdate_HelpText {
            get {
                return ResourceManager.GetString("InteractiveUpdate_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Token was invalid. Please generate a new GitHub token and try again..
        /// </summary>
        public static string InvalidGitHubToken_Message {
            get {
                return ResourceManager.GetString("InvalidGitHubToken_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid locale. Enter a valid language tag..
        /// </summary>
        public static string InvalidLocale_ErrorMessage {
            get {
                return ResourceManager.GetString("InvalidLocale_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided manifest format is invalid..
        /// </summary>
        public static string InvalidManifestFormat_ErrorMessage {
            get {
                return ResourceManager.GetString("InvalidManifestFormat_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid token provided, please generate a new GitHub token and try again..
        /// </summary>
        public static string InvalidTokenError_Message {
            get {
                return ResourceManager.GetString("InvalidTokenError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid URL provided. Please check the URL and try again..
        /// </summary>
        public static string InvalidUrl_Error {
            get {
                return ResourceManager.GetString("InvalidUrl_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package file is not a valid zip archive..
        /// </summary>
        public static string InvalidZipFile_ErrorMessage {
            get {
                return ResourceManager.GetString("InvalidZipFile_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The optional parameter for invocable files.
        /// </summary>
        public static string InvocationParameter_KeywordDescription {
            get {
                return ResourceManager.GetString("InvocationParameter_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overrides default language.
        /// </summary>
        public static string Language_KeywordDescription {
            get {
                return ResourceManager.GetString("Language_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launching web browser... If default web browser does not launch, please go to: {0}.
        /// </summary>
        public static string LaunchBrowser_Message {
            get {
                return ResourceManager.GetString("LaunchBrowser_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package license |e.g. MIT License|.
        /// </summary>
        public static string License_KeywordDescription {
            get {
                return ResourceManager.GetString("License_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Agreement.
        /// </summary>
        public static string LicenseAgreement_Heading {
            get {
                return ResourceManager.GetString("LicenseAgreement_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license page.
        /// </summary>
        public static string LicenseUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("LicenseUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Links.
        /// </summary>
        public static string Links_Heading {
            get {
                return ResourceManager.GetString("Links_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists out all the downloaded installers stored in cache.
        /// </summary>
        public static string List_HelpText {
            get {
                return ResourceManager.GetString("List_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded settings from backup file..
        /// </summary>
        public static string LoadSettingsFromBackup_Message {
            get {
                return ResourceManager.GetString("LoadSettingsFromBackup_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded settings from default factory settings..
        /// </summary>
        public static string LoadSettingsFromDefault_Message {
            get {
                return ResourceManager.GetString("LoadSettingsFromDefault_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locale manifest matching with input locale &quot;{0}&quot; already exists. Use the update-locale command to update an existing locale manifest..
        /// </summary>
        public static string LocaleAlreadyExists_ErrorMessage {
            get {
                return ResourceManager.GetString("LocaleAlreadyExists_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest for input locale &quot;{0}&quot; does not exist. Use the new-locale command to generate a new locale manifest..
        /// </summary>
        public static string LocaleDoesNotExist_Message {
            get {
                return ResourceManager.GetString("LocaleDoesNotExist_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locale ({0}) Manifest:.
        /// </summary>
        public static string LocaleManifest_Message {
            get {
                return ResourceManager.GetString("LocaleManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display all locale manifests of the package..
        /// </summary>
        public static string LocaleManifests_HelpText {
            get {
                return ResourceManager.GetString("LocaleManifests_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package installer locale.
        /// </summary>
        public static string Localization_KeywordDescription {
            get {
                return ResourceManager.GetString("Localization_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer log redirection path.
        /// </summary>
        public static string Log_KeywordDescription {
            get {
                return ResourceManager.GetString("Log_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logs.
        /// </summary>
        public static string Logs_Heading {
            get {
                return ResourceManager.GetString("Logs_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For information about the restrictions for each field, visit {0}.
        /// </summary>
        public static string ManifestDocumentation_HelpText {
            get {
                return ResourceManager.GetString("ManifestDocumentation_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output format of the manifest. Default is &quot;yaml&quot;..
        /// </summary>
        public static string ManifestFormat_HelpText {
            get {
                return ResourceManager.GetString("ManifestFormat_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest saved to {0}.
        /// </summary>
        public static string ManifestSaved_Message {
            get {
                return ResourceManager.GetString("ManifestSaved_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest type.
        /// </summary>
        public static string ManifestType_KeywordDescription {
            get {
                return ResourceManager.GetString("ManifestType_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest validation succeeded: {0}.
        /// </summary>
        public static string ManifestValidationSucceeded_Message {
            get {
                return ResourceManager.GetString("ManifestValidationSucceeded_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest syntax version.
        /// </summary>
        public static string ManifestVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("ManifestVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer markets.
        /// </summary>
        public static string Markets_KeywordDescription {
            get {
                return ResourceManager.GetString("Markets_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer minimum operating system version.
        /// </summary>
        public static string MinimumOSVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("MinimumOSVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum version package dependency.
        /// </summary>
        public static string MinimumVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("MinimumVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer minimum operating system version.
        /// </summary>
        public static string MinOSVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("MinOSVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to modify the optional default locale fields?.
        /// </summary>
        public static string ModifyOptionalDefaultLocaleFields_Message {
            get {
                return ResourceManager.GetString("ModifyOptionalDefaultLocaleFields_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to modify the optional installer fields?.
        /// </summary>
        public static string ModifyOptionalInstallerFields_Message {
            get {
                return ResourceManager.GetString("ModifyOptionalInstallerFields_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The most common package term.
        /// </summary>
        public static string Moniker_KeywordDescription {
            get {
                return ResourceManager.GetString("Moniker_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More help can be found at: https://aka.ms/winget-create.
        /// </summary>
        public static string MoreHelp_HelpText {
            get {
                return ResourceManager.GetString("MoreHelp_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple architectures detected. Only one architecture can be specified for an override..
        /// </summary>
        public static string MultipleArchitectureOverride_Error {
            get {
                return ResourceManager.GetString("MultipleArchitectureOverride_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating a manifest is only supported with the same number of installer URLs..
        /// </summary>
        public static string MultipleInstallerUpdateDiscrepancy_Error {
            get {
                return ResourceManager.GetString("MultipleInstallerUpdateDiscrepancy_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple matches found for {0} {1} installer detected from the url: {2}.
        /// </summary>
        public static string MultipleMatchedInstaller_Error {
            get {
                return ResourceManager.GetString("MultipleMatchedInstaller_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple matches found for &quot;{0}&quot; from {1}. Please use the interactive mode to update this package..
        /// </summary>
        public static string MultipleMatchingNestedInstallersFound_Error {
            get {
                return ResourceManager.GetString("MultipleMatchingNestedInstallersFound_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple matches found for &quot;{0}&quot; from {1}..
        /// </summary>
        public static string MultipleMatchingNestedInstallersFound_Warning {
            get {
                return ResourceManager.GetString("MultipleMatchingNestedInstallersFound_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple nested installer architectures were detected for following archive packages:.
        /// </summary>
        public static string MultipleNestedArchitectures_Message {
            get {
                return ResourceManager.GetString("MultipleNestedArchitectures_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple scopes detected. Only one scope can be specified for an override..
        /// </summary>
        public static string MultipleScopeOverride_Error {
            get {
                return ResourceManager.GetString("MultipleScopeOverride_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package name |e.g. Visual Studio|.
        /// </summary>
        public static string Name_KeywordDescription {
            get {
                return ResourceManager.GetString("Name_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nested installer not found in zip archive: {0}. Please use the interactive mode to update this package..
        /// </summary>
        public static string NestedInstallerFileNotFound_Error {
            get {
                return ResourceManager.GetString("NestedInstallerFileNotFound_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nested installer not found in zip archive: {0}.
        /// </summary>
        public static string NestedInstallerFileNotFound_Warning {
            get {
                return ResourceManager.GetString("NestedInstallerFileNotFound_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of nested installer files contained inside an archive.
        /// </summary>
        public static string NestedInstallerFiles_KeywordDescription {
            get {
                return ResourceManager.GetString("NestedInstallerFiles_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing nested installer &apos;{0}&apos; from {1}.
        /// </summary>
        public static string NestedInstallerParsing_HelpText {
            get {
                return ResourceManager.GetString("NestedInstallerParsing_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nested installer type contained inside an archive.
        /// </summary>
        public static string NestedInstallerType_KeywordDescription {
            get {
                return ResourceManager.GetString("NestedInstallerType_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The zip archive does not contain a matching installer type with the old relative path..
        /// </summary>
        public static string NestedInstallerTypeNotFound_Error {
            get {
                return ResourceManager.GetString("NestedInstallerTypeNotFound_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to GitHub. Check your network connection..
        /// </summary>
        public static string NetworkConnectionFailure_Message {
            get {
                return ResourceManager.GetString("NetworkConnectionFailure_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command will walk you through a series of questions to help you create your package manifest..
        /// </summary>
        public static string NewCommand_Header {
            get {
                return ResourceManager.GetString("NewCommand_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launches a series of questions to help generate a new manifest.
        /// </summary>
        public static string NewCommand_HelpText {
            get {
                return ResourceManager.GetString("NewCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press ENTER to submit the value for each question including accepting the (default) value..
        /// </summary>
        public static string NewCommand_PrePrompt_Header {
            get {
                return ResourceManager.GetString("NewCommand_PrePrompt_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What is the new installer url?.
        /// </summary>
        public static string NewInstallerUrl_Message {
            get {
                return ResourceManager.GetString("NewInstallerUrl_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each new installer URL must have a single match to an existing installer based on architecture, installer type and scope. The following installers failed to match an existing installer:.
        /// </summary>
        public static string NewInstallerUrlMustMatchExisting_Message {
            get {
                return ResourceManager.GetString("NewInstallerUrlMustMatchExisting_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command will walk you through a series of questions to help generate a new locale manifest..
        /// </summary>
        public static string NewLocaleCommand_Header {
            get {
                return ResourceManager.GetString("NewLocaleCommand_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launches a series of questions to help generate a new locale manifest.
        /// </summary>
        public static string NewLocaleCommand_HelpText {
            get {
                return ResourceManager.GetString("NewLocaleCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package locale to create a new manifest for. If not provided, the tool will prompt for this value..
        /// </summary>
        public static string NewLocaleCommand_Locale_HelpText {
            get {
                return ResourceManager.GetString("NewLocaleCommand_Locale_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press ENTER to submit the value for each question including accepting the (reference) value from reference locale manifest..
        /// </summary>
        public static string NewLocaleCommand_PrePrompt_Header {
            get {
                return ResourceManager.GetString("NewLocaleCommand_PrePrompt_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the package to add a new locale for..
        /// </summary>
        public static string NewLocaleCommand_Version_HelpText {
            get {
                return ResourceManager.GetString("NewLocaleCommand_Version_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submitting a manifest without any updated changes is not allowed. .
        /// </summary>
        public static string NoChangeDetectedInUpdatedManifest_Message {
            get {
                return ResourceManager.GetString("NoChangeDetectedInUpdatedManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No supported installer(s) found in zip archive..
        /// </summary>
        public static string NoInstallersFoundInArchive_ErrorMessage {
            get {
                return ResourceManager.GetString("NoInstallersFoundInArchive_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NONE.
        /// </summary>
        public static string None_MenuItem {
            get {
                return ResourceManager.GetString("None_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No token provided, submission to GitHub skipped..
        /// </summary>
        public static string NoTokenProvided_Message {
            get {
                return ResourceManager.GetString("NoTokenProvided_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No token response from GitHub OAuth flow, ending command execution..
        /// </summary>
        public static string NoTokenResponse_Message {
            get {
                return ResourceManager.GetString("NoTokenResponse_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please check if the provided package arguments are correct..
        /// </summary>
        public static string OctokitNotFound_Error {
            get {
                return ResourceManager.GetString("OctokitNotFound_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the cache folder storing the downloaded installers.
        /// </summary>
        public static string Open_HelpText {
            get {
                return ResourceManager.GetString("Open_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operating System: {0}.
        /// </summary>
        public static string OperatingSystem_Info {
            get {
                return ResourceManager.GetString("OperatingSystem_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an older version of Winget-Create and may be missing some critical features..
        /// </summary>
        public static string OutdatedVersionNotice_Message {
            get {
                return ResourceManager.GetString("OutdatedVersionNotice_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output directory to store the generated manifests locally..
        /// </summary>
        public static string OutputDirectory_HelpText {
            get {
                return ResourceManager.GetString("OutputDirectory_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many overrides specified for the following installer URL: {0}.
        /// </summary>
        public static string OverrideLimitExceeded_Error {
            get {
                return ResourceManager.GetString("OverrideLimitExceeded_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overriding {0} with architecture {1}.
        /// </summary>
        public static string OverridingArchitecture_Warning {
            get {
                return ResourceManager.GetString("OverridingArchitecture_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overriding {0} with scope {1}.
        /// </summary>
        public static string OverridingScope_Warning {
            get {
                return ResourceManager.GetString("OverridingScope_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of package dependencies from current source.
        /// </summary>
        public static string PackageDependencies_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageDependencies_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MSIX installer package family name.
        /// </summary>
        public static string PackageFamilyName_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageFamilyName_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We have detected that this package identifier already exists. If you intend to update an existing package, please use the update command..
        /// </summary>
        public static string PackageIdAlreadyExists_Error {
            get {
                return ResourceManager.GetString("PackageIdAlreadyExists_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package identifier used to lookup the existing manifest on the Windows Package Manager repo. Id is case-sensitive..
        /// </summary>
        public static string PackageIdentifier_HelpText {
            get {
                return ResourceManager.GetString("PackageIdentifier_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package unique identifier |e.g. Microsoft.VisualStudio|.
        /// </summary>
        public static string PackageIdentifier_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageIdentifier_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package meta-data locale |e.g. en-US|.
        /// </summary>
        public static string PackageLocale_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageLocale_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package name |e.g. Visual Studio|.
        /// </summary>
        public static string PackageName_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageName_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to parse the package from [{0}].
        /// </summary>
        public static string PackageParsing_Error {
            get {
                return ResourceManager.GetString("PackageParsing_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package home page.
        /// </summary>
        public static string PackageUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package version |e.g. 1.2.3.4|.
        /// </summary>
        public static string PackageVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string Path_Heading {
            get {
                return ResourceManager.GetString("Path_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to a manifest file or directory containing the manifests that you want to submit to the Windows Package Manager repo.
        /// </summary>
        public static string Path_HelpText {
            get {
                return ResourceManager.GetString("Path_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path does not exist.
        /// </summary>
        public static string PathDoesNotExist_Warning {
            get {
                return ResourceManager.GetString("PathDoesNotExist_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer platform.
        /// </summary>
        public static string Platform_KeywordDescription {
            get {
                return ResourceManager.GetString("Platform_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command alias to be used for calling the nested portable package.
        /// </summary>
        public static string PortableCommandAlias_KeywordDescription {
            get {
                return ResourceManager.GetString("PortableCommandAlias_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What is the command alias of the portable package |e.g. nuget|.
        /// </summary>
        public static string PortableCommandAlias_Message {
            get {
                return ResourceManager.GetString("PortableCommandAlias_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press any key to continue....
        /// </summary>
        public static string PressKeyToContinue_Message {
            get {
                return ResourceManager.GetString("PressKeyToContinue_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Privacy Statement.
        /// </summary>
        public static string PrivacyStatement_Heading {
            get {
                return ResourceManager.GetString("PrivacyStatement_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Privacy statement: {0}.
        /// </summary>
        public static string PrivacyStatement_HelpText {
            get {
                return ResourceManager.GetString("PrivacyStatement_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The publisher privacy page or the package privacy page.
        /// </summary>
        public static string PrivacyUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("PrivacyUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uninstall registry key.
        /// </summary>
        public static string ProductCode_KeywordDescription {
            get {
                return ResourceManager.GetString("ProductCode_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of protocols the package provides a handler for.
        /// </summary>
        public static string Protocols_KeywordDescription {
            get {
                return ResourceManager.GetString("Protocols_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The publisher name |e.g. Microsoft|.
        /// </summary>
        public static string Publisher_KeywordDescription {
            get {
                return ResourceManager.GetString("Publisher_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The publisher support page.
        /// </summary>
        public static string PublisherSupportUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("PublisherSupportUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The publisher home page.
        /// </summary>
        public static string PublisherUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("PublisherUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The title of the pull request submitted to GitHub..
        /// </summary>
        public static string PullRequestTitle_HelpText {
            get {
                return ResourceManager.GetString("PullRequestTitle_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pull request can be found here: {0}.
        /// </summary>
        public static string PullRequestURI_Message {
            get {
                return ResourceManager.GetString("PullRequestURI_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The purchase url for acquiring entitlement for the package.
        /// </summary>
        public static string PurchaseUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("PurchaseUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub api rate limit exceeded. To extend your rate limit, provide your GitHub token with the &apos;-t&apos; flag or store one using the &apos;token --store&apos; command..
        /// </summary>
        public static string RateLimitExceeded_Message {
            get {
                return ResourceManager.GetString("RateLimitExceeded_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing locale manifest to be used as reference for default values. If not provided, the default locale manifest will be used..
        /// </summary>
        public static string ReferenceLocale_HelpText {
            get {
                return ResourceManager.GetString("ReferenceLocale_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The reference locale does not exist in the manifest..
        /// </summary>
        public static string ReferenceLocaleNotFound_Error {
            get {
                return ResourceManager.GetString("ReferenceLocaleNotFound_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input does not match the valid format pattern for this field..
        /// </summary>
        public static string RegexFieldValidation_Error {
            get {
                return ResourceManager.GetString("RegexFieldValidation_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The relative file path to the nested installer file.
        /// </summary>
        public static string RelativeFilePath_KeywordDescription {
            get {
                return ResourceManager.GetString("RelativeFilePath_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer release date.
        /// </summary>
        public static string ReleaseDate_KeywordDescription {
            get {
                return ResourceManager.GetString("ReleaseDate_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer release date.
        /// </summary>
        public static string ReleaseDateTime_KeywordDescription {
            get {
                return ResourceManager.GetString("ReleaseDateTime_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package release notes.
        /// </summary>
        public static string ReleaseNotes_KeywordDescription {
            get {
                return ResourceManager.GetString("ReleaseNotes_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package release notes url.
        /// </summary>
        public static string ReleaseNotesUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("ReleaseNotesUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to REMOVE LAST ENTRY.
        /// </summary>
        public static string RemoveLastEntry_MenuItem {
            get {
                return ResourceManager.GetString("RemoveLastEntry_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to REMOVE LAST ITEM.
        /// </summary>
        public static string RemoveLastItem_MenuItem {
            get {
                return ResourceManager.GetString("RemoveLastItem_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace operation cannot be performed. Package identifier &apos;{0}&apos; does not exist in the Windows Package Manager repo..
        /// </summary>
        public static string ReplacePackageIdDoesNotExist_Error {
            get {
                return ResourceManager.GetString("ReplacePackageIdDoesNotExist_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boolean value for replacing an existing manifest from the Windows Package Manager repo. Optionally provide a version or else the latest version will be replaced. Default is false..
        /// </summary>
        public static string ReplacePrevious_HelpText {
            get {
                return ResourceManager.GetString("ReplacePrevious_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional. Package version used in conjunction with the replace argument to replace an older version of the manifest from the Windows Package Manager repo..
        /// </summary>
        public static string ReplaceVersion_HelpText {
            get {
                return ResourceManager.GetString("ReplaceVersion_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replace version cannot be equal to the submit version..
        /// </summary>
        public static string ReplaceVersionEqualsSubmitVersion_ErrorMessage {
            get {
                return ResourceManager.GetString("ReplaceVersionEqualsSubmitVersion_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replace version cannot be equal to the update version..
        /// </summary>
        public static string ReplaceVersionEqualsUpdateVersion_ErrorMessage {
            get {
                return ResourceManager.GetString("ReplaceVersionEqualsUpdateVersion_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository &quot;{0}/{1}&quot; not found. Please verify the Windows Package Manager repository owner and name in your settings file..
        /// </summary>
        public static string RepositoryNotFound_Error {
            get {
                return ResourceManager.GetString("RepositoryNotFound_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the installer should be pinned by default from upgrade.
        /// </summary>
        public static string RequireExplicitUpgrade_KeywordDescription {
            get {
                return ResourceManager.GetString("RequireExplicitUpgrade_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To resolve matching conflicts manually, use the --interactive flag..
        /// </summary>
        public static string ResolveMatchingConflicts_Message {
            get {
                return ResourceManager.GetString("ResolveMatchingConflicts_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of restricted MSIX capabilities.
        /// </summary>
        public static string RestrictedCapabilities_KeywordDescription {
            get {
                return ResourceManager.GetString("RestrictedCapabilities_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resuming command execution....
        /// </summary>
        public static string ResumingCommandExecution_Message {
            get {
                return ResourceManager.GetString("ResumingCommandExecution_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving latest manifest for {0}.
        /// </summary>
        public static string RetrievingManifest_Message {
            get {
                return ResourceManager.GetString("RetrievingManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of return responses for common errors.
        /// </summary>
        public static string ReturnResponse_KeywordDescription {
            get {
                return ResourceManager.GetString("ReturnResponse_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return response url to provide additional guidance for expected return codes.
        /// </summary>
        public static string ReturnResponseUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("ReturnResponseUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SAVE AND EXIT.
        /// </summary>
        public static string SaveAndExit_MenuItem {
            get {
                return ResourceManager.GetString("SaveAndExit_MenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an enumeration of install scope (“User”, “System”).
        /// </summary>
        public static string Scope_KeywordDescription {
            get {
                return ResourceManager.GetString("Scope_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What would you like to do?.
        /// </summary>
        public static string SelectAction_Message {
            get {
                return ResourceManager.GetString("SelectAction_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an existing locale.
        /// </summary>
        public static string SelectExistingLocale_Message {
            get {
                return ResourceManager.GetString("SelectExistingLocale_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the installer(s) from the zip archive:.
        /// </summary>
        public static string SelectInstallersFromZip_Message {
            get {
                return ResourceManager.GetString("SelectInstallersFromZip_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which installer would you like to edit?.
        /// </summary>
        public static string SelectInstallerToEdit_Message {
            get {
                return ResourceManager.GetString("SelectInstallerToEdit_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an item to edit or add a new one.
        /// </summary>
        public static string SelectItemToEdit_Message {
            get {
                return ResourceManager.GetString("SelectItemToEdit_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which manifest do you want to edit?.
        /// </summary>
        public static string SelectManifestToEdit_Message {
            get {
                return ResourceManager.GetString("SelectManifestToEdit_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which property would you like to edit?.
        /// </summary>
        public static string SelectPropertyToEdit_Message {
            get {
                return ResourceManager.GetString("SelectPropertyToEdit_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the new relative file path.
        /// </summary>
        public static string SelectRelativeFilePath_Message {
            get {
                return ResourceManager.GetString("SelectRelativeFilePath_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; is defined with a bad format..
        /// </summary>
        public static string SentenceBadFormatConversionErrorOption {
            get {
                return ResourceManager.GetString("SentenceBadFormatConversionErrorOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value not bound to option name is defined with a bad format..
        /// </summary>
        public static string SentenceBadFormatConversionErrorValue {
            get {
                return ResourceManager.GetString("SentenceBadFormatConversionErrorValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Token &apos;{0}&apos; is not recognized..
        /// </summary>
        public static string SentenceBadFormatTokenError {
            get {
                return ResourceManager.GetString("SentenceBadFormatTokenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verb &apos;{0}&apos; is not recognized..
        /// </summary>
        public static string SentenceBadVerbSelectedError {
            get {
                return ResourceManager.GetString("SentenceBadVerbSelectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR(S):.
        /// </summary>
        public static string SentenceErrorsHeadingText {
            get {
                return ResourceManager.GetString("SentenceErrorsHeadingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display this help screen..
        /// </summary>
        public static string SentenceHelpCommandTextOption {
            get {
                return ResourceManager.GetString("SentenceHelpCommandTextOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display more information on a specific command..
        /// </summary>
        public static string SentenceHelpCommandTextVerb {
            get {
                return ResourceManager.GetString("SentenceHelpCommandTextVerb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required option &apos;{0}&apos; is missing..
        /// </summary>
        public static string SentenceMissingRequiredOptionError {
            get {
                return ResourceManager.GetString("SentenceMissingRequiredOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required value not bound to option name is missing..
        /// </summary>
        public static string SentenceMissingRequiredValueError {
            get {
                return ResourceManager.GetString("SentenceMissingRequiredValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; has no value..
        /// </summary>
        public static string SentenceMissingValueOptionError {
            get {
                return ResourceManager.GetString("SentenceMissingValueOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options: {0} are not compatible with {1}..
        /// </summary>
        public static string SentenceMutuallyExclusiveSetErrors {
            get {
                return ResourceManager.GetString("SentenceMutuallyExclusiveSetErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No verb selected..
        /// </summary>
        public static string SentenceNoVerbSelectedError {
            get {
                return ResourceManager.GetString("SentenceNoVerbSelectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group.
        /// </summary>
        public static string SentenceOptionGroupWord {
            get {
                return ResourceManager.GetString("SentenceOptionGroupWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; is defined multiple times..
        /// </summary>
        public static string SentenceRepeatedOptionError {
            get {
                return ResourceManager.GetString("SentenceRepeatedOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required..
        /// </summary>
        public static string SentenceRequiredWord {
            get {
                return ResourceManager.GetString("SentenceRequiredWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A sequence option &apos;{0}&apos; is defined with fewer or more items than required..
        /// </summary>
        public static string SentenceSequenceOutOfRangeErrorOption {
            get {
                return ResourceManager.GetString("SentenceSequenceOutOfRangeErrorOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A sequence value not bound to option name is defined with fewer items than required..
        /// </summary>
        public static string SentenceSequenceOutOfRangeErrorValue {
            get {
                return ResourceManager.GetString("SentenceSequenceOutOfRangeErrorValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error setting value to option &apos;{0}&apos;: {1}.
        /// </summary>
        public static string SentenceSetValueExceptionError {
            get {
                return ResourceManager.GetString("SentenceSetValueExceptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; is unknown..
        /// </summary>
        public static string SentenceUnknownOptionError {
            get {
                return ResourceManager.GetString("SentenceUnknownOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USAGE:.
        /// </summary>
        public static string SentenceUsageHeadingText {
            get {
                return ResourceManager.GetString("SentenceUsageHeadingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display version information..
        /// </summary>
        public static string SentenceVersionCommandText {
            get {
                return ResourceManager.GetString("SentenceVersionCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open settings.
        /// </summary>
        public static string SettingsCommand_HelpText {
            get {
                return ResourceManager.GetString("SettingsCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting GitHub token....
        /// </summary>
        public static string SettingToken_Message {
            get {
                return ResourceManager.GetString("SettingToken_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SHA256 installer hash.
        /// </summary>
        public static string Sha256_KeywordDescription {
            get {
                return ResourceManager.GetString("Sha256_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The short package description.
        /// </summary>
        public static string ShortDescription_KeywordDescription {
            get {
                return ResourceManager.GetString("ShortDescription_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub Personal Access Token used for authenticated access to GitHub API. It is recommended to provide a token to get a higher API rate limit..
        /// </summary>
        public static string ShowCommand_GitHubToken_HelpText {
            get {
                return ResourceManager.GetString("ShowCommand_GitHubToken_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display a manifest from the Windows Package Manager repository.
        /// </summary>
        public static string ShowCommand_HelpText {
            get {
                return ResourceManager.GetString("ShowCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the package to show the manifest for..
        /// </summary>
        public static string ShowCommand_Version_HelpText {
            get {
                return ResourceManager.GetString("ShowCommand_Version_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MSIX SHA256 signature hash.
        /// </summary>
        public static string SignatureSha256_KeywordDescription {
            get {
                return ResourceManager.GetString("SignatureSha256_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The silent installer switches.
        /// </summary>
        public static string Silent_KeywordDescription {
            get {
                return ResourceManager.GetString("Silent_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The silent with progress installer switches.
        /// </summary>
        public static string SilentWithProgress_KeywordDescription {
            get {
                return ResourceManager.GetString("SilentWithProgress_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Singleton Manifest:.
        /// </summary>
        public static string SingletonManifest_Message {
            get {
                return ResourceManager.GetString("SingletonManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping pull request submission....
        /// </summary>
        public static string SkippingPullRequest_Message {
            get {
                return ResourceManager.GetString("SkippingPullRequest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the cached GitHub token. Can specify token to cache with --token parameter, otherwise will initiate OAuth flow..
        /// </summary>
        public static string Store_HelpText {
            get {
                return ResourceManager.GetString("Store_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Token stored in cache successfully..
        /// </summary>
        public static string StoringToken_Message {
            get {
                return ResourceManager.GetString("StoringToken_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submits a valid manifest directly to the Windows Package Manager repo.
        /// </summary>
        public static string SubmitCommand_HelpText {
            get {
                return ResourceManager.GetString("SubmitCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submit arguments were provided. Did you forget to include the --submit, -s flag?.
        /// </summary>
        public static string SubmitFlagMissing_Warning {
            get {
                return ResourceManager.GetString("SubmitFlagMissing_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submitting pull request for manifest....
        /// </summary>
        public static string SubmittingPullRequest_Message {
            get {
                return ResourceManager.GetString("SubmittingPullRequest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boolean value for submitting to the Windows Package Manager repo. If true, updated manifest will be submitted directly using the provided GitHub Token. Default is false..
        /// </summary>
        public static string SubmitToWinget_HelpText {
            get {
                return ResourceManager.GetString("SubmitToWinget_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection of installer switches.
        /// </summary>
        public static string Switches_KeywordDescription {
            get {
                return ResourceManager.GetString("Switches_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to create the locale manifest instead?.
        /// </summary>
        public static string SwitchToNewLocaleFlow_Message {
            get {
                return ResourceManager.GetString("SwitchToNewLocaleFlow_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to update the locale manifest instead?.
        /// </summary>
        public static string SwitchToUpdateLocaleFlow_Message {
            get {
                return ResourceManager.GetString("SwitchToUpdateLocaleFlow_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create a reference to the forked repository. This can be caused when the forked repository is behind by too many commits. Sync your fork and try again..
        /// </summary>
        public static string SyncForkWithUpstream_Message {
            get {
                return ResourceManager.GetString("SyncForkWithUpstream_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Architecture: {0}.
        /// </summary>
        public static string SystemArchitecture_Info {
            get {
                return ResourceManager.GetString("SystemArchitecture_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of additional package search terms.
        /// </summary>
        public static string Tags_KeywordDescription {
            get {
                return ResourceManager.GetString("Tags_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data is anonymous and collected only by Microsoft..
        /// </summary>
        public static string TelemetryAnonymous_Message {
            get {
                return ResourceManager.GetString("TelemetryAnonymous_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, telemetry is enabled but can be disabled by running `wingetcreate settings` and editing your settings file..
        /// </summary>
        public static string TelemetryEnabledByDefault_Message {
            get {
                return ResourceManager.GetString("TelemetryEnabledByDefault_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows Package Manager Manifest Creator collects usage data in order to improve your experience..
        /// </summary>
        public static string TelemetryJustification_Message {
            get {
                return ResourceManager.GetString("TelemetryJustification_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telemetry Settings.
        /// </summary>
        public static string TelemetrySettings_Message {
            get {
                return ResourceManager.GetString("TelemetrySettings_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Third Party Notices.
        /// </summary>
        public static string ThirdPartyNotices_Heading {
            get {
                return ResourceManager.GetString("ThirdPartyNotices_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modifies the GitHub auth token cache.
        /// </summary>
        public static string TokenCommand_HelpText {
            get {
                return ResourceManager.GetString("TokenCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User code expired. Generating new user code....
        /// </summary>
        public static string TokenExpired_Message {
            get {
                return ResourceManager.GetString("TokenExpired_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse the specified override {0}..
        /// </summary>
        public static string UnableToParseOverride_Error {
            get {
                return ResourceManager.GetString("UnableToParseOverride_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following unbound argument(s) were detected: &quot;{0}&quot;.
        /// </summary>
        public static string UnboundArguments_Message {
            get {
                return ResourceManager.GetString("UnboundArguments_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error while loading settings. Please verify your settings by running the settings command..
        /// </summary>
        public static string UnexpectedErrorLoadSettings_Message {
            get {
                return ResourceManager.GetString("UnexpectedErrorLoadSettings_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No matches found for {0} {1} installer detected from url: {2}.
        /// </summary>
        public static string UnmatchedInstaller_Error {
            get {
                return ResourceManager.GetString("UnmatchedInstaller_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No matches found for &quot;{0}&quot; from {1}.
        /// </summary>
        public static string UnmatchedNestedInstaller_Error {
            get {
                return ResourceManager.GetString("UnmatchedNestedInstaller_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of winget arguments the installer does not support.
        /// </summary>
        public static string UnsupportedArguments_KeywordDescription {
            get {
                return ResourceManager.GetString("UnsupportedArguments_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of OS architectures the installer does not support.
        /// </summary>
        public static string UnsupportedOSArchitectures_KeywordDescription {
            get {
                return ResourceManager.GetString("UnsupportedOSArchitectures_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade switches.
        /// </summary>
        public static string Update_KeywordDescription {
            get {
                return ResourceManager.GetString("Update_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to modify additional locale properties?.
        /// </summary>
        public static string UpdateAdditionalLocaleProperties_Message {
            get {
                return ResourceManager.GetString("UpdateAdditionalLocaleProperties_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to update another locale?.
        /// </summary>
        public static string UpdateAnotherLocale_Message {
            get {
                return ResourceManager.GetString("UpdateAnotherLocale_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade method.
        /// </summary>
        public static string UpdateBehavior_KeywordDescription {
            get {
                return ResourceManager.GetString("UpdateBehavior_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates fields of an existing manifest.
        /// </summary>
        public static string UpdateCommand_HelpText {
            get {
                return ResourceManager.GetString("UpdateCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launches a series of questions to help update an existing locale manifest.
        /// </summary>
        public static string UpdateLocaleCommand_HelpText {
            get {
                return ResourceManager.GetString("UpdateLocaleCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package locale to update the manifest for. If not provided, the tool will prompt you a list of existing locales to choose from..
        /// </summary>
        public static string UpdateLocaleCommand_Locale_HelpText {
            get {
                return ResourceManager.GetString("UpdateLocaleCommand_Locale_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the package to update the locale for..
        /// </summary>
        public static string UpdateLocaleCommand_Version_HelpText {
            get {
                return ResourceManager.GetString("UpdateLocaleCommand_Version_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating {0} of {1} installers:.
        /// </summary>
        public static string UpdatingInstallerOutOfTotal_Message {
            get {
                return ResourceManager.GetString("UpdatingInstallerOutOfTotal_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade switches.
        /// </summary>
        public static string Upgrade_KeywordDescription {
            get {
                return ResourceManager.GetString("Upgrade_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade method.
        /// </summary>
        public static string UpgradeBehavior_KeywordDescription {
            get {
                return ResourceManager.GetString("UpgradeBehavior_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UpgradeCode used for correlation of packages across sources.
        /// </summary>
        public static string UpgradeCode_KeywordDescription {
            get {
                return ResourceManager.GetString("UpgradeCode_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have the winget client installed, you can update by running the command: `winget upgrade Microsoft.WingetCreate`.
        /// </summary>
        public static string UpgradeUsingWinget_Message {
            get {
                return ResourceManager.GetString("UpgradeUsingWinget_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer URL.
        /// </summary>
        public static string Url_KeywordDescription {
            get {
                return ResourceManager.GetString("Url_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try using the architecture and/or scope overrides to uniquely match new URLs to existing installer nodes in the manifest..
        /// </summary>
        public static string UseOverrides_ErrorMessage {
            get {
                return ResourceManager.GetString("UseOverrides_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User settings.
        /// </summary>
        public static string UserSettings_Heading {
            get {
                return ResourceManager.GetString("UserSettings_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please check and verify the usage of this command by passing in the --help flag..
        /// </summary>
        public static string VerifyCommandUsage_Message {
            get {
                return ResourceManager.GetString("VerifyCommandUsage_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version to be used when updating the package version field..
        /// </summary>
        public static string Version_HelpText {
            get {
                return ResourceManager.GetString("Version_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0} does not exist for {1} in the Windows Package Manager repository..
        /// </summary>
        public static string VersionDoesNotExist_Error {
            get {
                return ResourceManager.GetString("VersionDoesNotExist_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the version manifest of the package..
        /// </summary>
        public static string VersionManifest_HelpText {
            get {
                return ResourceManager.GetString("VersionManifest_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version Manifest:.
        /// </summary>
        public static string VersionManifest_Message {
            get {
                return ResourceManager.GetString("VersionManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version manifest preview:.
        /// </summary>
        public static string VersionManifestPreview_Message {
            get {
                return ResourceManager.GetString("VersionManifestPreview_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of Windows feature dependencies.
        /// </summary>
        public static string WindowsFeatures_KeywordDescription {
            get {
                return ResourceManager.GetString("WindowsFeatures_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of Windows library dependencies.
        /// </summary>
        public static string WindowsLibraries_KeywordDescription {
            get {
                return ResourceManager.GetString("WindowsLibraries_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Winget-Create Directories.
        /// </summary>
        public static string WingetCreateDirectories_Heading {
            get {
                return ResourceManager.GetString("WingetCreateDirectories_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing the token to cache failed: {0}.
        /// </summary>
        public static string WritingCacheTokenFailed_Message {
            get {
                return ResourceManager.GetString("WritingCacheTokenFailed_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The downloaded zip contains path exceeding the system-defined maximum length..
        /// </summary>
        public static string ZipPathExceedsMaxLength_ErrorMessage {
            get {
                return ResourceManager.GetString("ZipPathExceedsMaxLength_ErrorMessage", resourceCulture);
            }
        }
    }
}
