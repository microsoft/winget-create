//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.WingetCreateCLI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.WingetCreateCLI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The additional properties for future minor version compatibility.
        /// </summary>
        public static string AdditionalProperties_KeywordDescription {
            get {
                return ResourceManager.GetString("AdditionalProperties_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest creation command line utility generates manifest for submitting apps to the Windows Package Manager repo..
        /// </summary>
        public static string AppDescription_HelpText {
            get {
                return ResourceManager.GetString("AppDescription_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The most common package term.
        /// </summary>
        public static string AppMoniker_KeywordDescription {
            get {
                return ResourceManager.GetString("AppMoniker_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer target architecture.
        /// </summary>
        public static string Arch_KeywordDescription {
            get {
                return ResourceManager.GetString("Arch_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer target architecture.
        /// </summary>
        public static string Architecture_KeywordDescription {
            get {
                return ResourceManager.GetString("Architecture_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package author.
        /// </summary>
        public static string Author_KeywordDescription {
            get {
                return ResourceManager.GetString("Author_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web browser failed to launch: {0}.
        /// </summary>
        public static string BrowserFailedToLaunch_Error {
            get {
                return ResourceManager.GetString("BrowserFailedToLaunch_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage downloaded installers stored in cache.
        /// </summary>
        public static string CacheCommand_HelpText {
            get {
                return ResourceManager.GetString("CacheCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of MSIX capabilities.
        /// </summary>
        public static string Capabilities_KeywordDescription {
            get {
                return ResourceManager.GetString("Capabilities_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output directory changed to current directory: {0}.
        /// </summary>
        public static string ChangeOutputDirToCurrDir_Message {
            get {
                return ResourceManager.GetString("ChangeOutputDirToCurrDir_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The distribution channel.
        /// </summary>
        public static string Channel_KeywordDescription {
            get {
                return ResourceManager.GetString("Channel_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes all downloaded installers in the cache folder.
        /// </summary>
        public static string Clean_HelpText {
            get {
                return ResourceManager.GetString("Clean_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear the cached GitHub token.
        /// </summary>
        public static string Clear_HelpText {
            get {
                return ResourceManager.GetString("Clear_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing GitHub token cache.
        /// </summary>
        public static string ClearToken_Message {
            get {
                return ResourceManager.GetString("ClearToken_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of commands or aliases to run the package.
        /// </summary>
        public static string Commands_KeywordDescription {
            get {
                return ResourceManager.GetString("Commands_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please ensure that the updated manifest you are submitting is different from the existing package..
        /// </summary>
        public static string CompareUpdatedManifestWithExisting_Message {
            get {
                return ResourceManager.GetString("CompareUpdatedManifestWithExisting_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to submit your manifest to the Windows Package Manager repository?.
        /// </summary>
        public static string ConfirmGitHubSubmitManifest_Message {
            get {
                return ResourceManager.GetString("ConfirmGitHubSubmitManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to make changes to this manifest?.
        /// </summary>
        public static string ConfirmManifestCreation_Message {
            get {
                return ResourceManager.GetString("ConfirmManifestCreation_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package copyright.
        /// </summary>
        public static string Copyright_KeywordDescription {
            get {
                return ResourceManager.GetString("Copyright_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package copyright page.
        /// </summary>
        public static string CopyrightUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("CopyrightUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom installer switches.
        /// </summary>
        public static string Custom_KeywordDescription {
            get {
                return ResourceManager.GetString("Custom_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package meta-data default locale |e.g. en-US|.
        /// </summary>
        public static string DefaultLocale_KeywordDescription {
            get {
                return ResourceManager.GetString("DefaultLocale_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default locale manifest preview:.
        /// </summary>
        public static string DefaultLocaleManifestPreview_Message {
            get {
                return ResourceManager.GetString("DefaultLocaleManifestPreview_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting {0}.
        /// </summary>
        public static string DeletingInstaller_Message {
            get {
                return ResourceManager.GetString("DeletingInstaller_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection of package dependencies.
        /// </summary>
        public static string Dependencies_KeywordDescription {
            get {
                return ResourceManager.GetString("Dependencies_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full package description.
        /// </summary>
        public static string Description_KeywordDescription {
            get {
                return ResourceManager.GetString("Description_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The architecture detected from the binary might be different than what is specified in the installer URL for the following installer(s):.
        /// </summary>
        public static string DetectedArchMismatch_Message {
            get {
                return ResourceManager.GetString("DetectedArchMismatch_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DONE.
        /// </summary>
        public static string DoneSymbol_String {
            get {
                return ResourceManager.GetString("DoneSymbol_String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to download installer..
        /// </summary>
        public static string DownloadFile_Error {
            get {
                return ResourceManager.GetString("DownloadFile_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading and parsing: {0}....
        /// </summary>
        public static string DownloadInstaller_Message {
            get {
                return ResourceManager.GetString("DownloadInstaller_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to enable telemetry?.
        /// </summary>
        public static string EnableTelemetryFirstRun_Message {
            get {
                return ResourceManager.GetString("EnableTelemetryFirstRun_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter values for the following fields:.
        /// </summary>
        public static string EnterFollowingFields_Message {
            get {
                return ResourceManager.GetString("EnterFollowingFields_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the following user verification code when prompted: {0}.
        /// </summary>
        public static string EnterUserCode_Message {
            get {
                return ResourceManager.GetString("EnterUserCode_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: {0}.
        /// </summary>
        public static string Error_Prefix {
            get {
                return ResourceManager.GetString("Error_Prefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing file: {0}..
        /// </summary>
        public static string ErrorParsingSettingsFile_Message {
            get {
                return ResourceManager.GetString("ErrorParsingSettingsFile_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download installer and extract metadata.
        /// </summary>
        public static string Example_NewCommand_DownloadInstaller {
            get {
                return ResourceManager.GetString("Example_NewCommand_DownloadInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save locally and submit a pull request.
        /// </summary>
        public static string Example_NewCommand_SaveLocallyOrSubmit {
            get {
                return ResourceManager.GetString("Example_NewCommand_SaveLocallyOrSubmit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start from scratch.
        /// </summary>
        public static string Example_NewCommand_StartFromScratch {
            get {
                return ResourceManager.GetString("Example_NewCommand_StartFromScratch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submit local manifest file to Windows Package Manager repo.
        /// </summary>
        public static string Example_SubmitCommand_SubmitLocalManifest {
            get {
                return ResourceManager.GetString("Example_SubmitCommand_SubmitLocalManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save and publish updated manifest.
        /// </summary>
        public static string Example_UpdateCommand_SaveAndPublish {
            get {
                return ResourceManager.GetString("Example_UpdateCommand_SaveAndPublish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for an existing manifest and update the installer url.
        /// </summary>
        public static string Example_UpdateCommand_SearchAndUpdateInstallerURL {
            get {
                return ResourceManager.GetString("Example_UpdateCommand_SearchAndUpdateInstallerURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for an existing manifest and update the version.
        /// </summary>
        public static string Example_UpdateCommand_SearchAndUpdateVersion {
            get {
                return ResourceManager.GetString("Example_UpdateCommand_SearchAndUpdateVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution of the command is paused until the GitHub login has been completed. .
        /// </summary>
        public static string ExecutionPaused_Message {
            get {
                return ResourceManager.GetString("ExecutionPaused_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of external package dependencies.
        /// </summary>
        public static string ExternalDependencies_KeywordDescription {
            get {
                return ResourceManager.GetString("ExternalDependencies_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of file extensions the package could support.
        /// </summary>
        public static string FileExtensions_KeywordDescription {
            get {
                return ResourceManager.GetString("FileExtensions_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating a preview of your manifests....
        /// </summary>
        public static string GenerateManifestPreview_Message {
            get {
                return ResourceManager.GetString("GenerateManifestPreview_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No settings file found, generating new settings file from loaded settings....
        /// </summary>
        public static string GenerateNewSettingsFile_Message {
            get {
                return ResourceManager.GetString("GenerateNewSettingsFile_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A GitHub account or personal access token must be linked in order to continue with this command. .
        /// </summary>
        public static string GitHubAccountMustBeLinked_Message {
            get {
                return ResourceManager.GetString("GitHubAccountMustBeLinked_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub authorization failed: {0} - {1}.
        /// </summary>
        public static string GitHubFailedAuthorization_Message {
            get {
                return ResourceManager.GetString("GitHubFailedAuthorization_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub login failed..
        /// </summary>
        public static string GitHubLoginFail_Error {
            get {
                return ResourceManager.GetString("GitHubLoginFail_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub personal access token used for direct submission to the Windows Package Manager repo. If no token is provided, tool will prompt for GitHub login credentials..
        /// </summary>
        public static string GitHubToken_HelpText {
            get {
                return ResourceManager.GetString("GitHubToken_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Manifest Creator v{0}.
        /// </summary>
        public static string Heading {
            get {
                return ResourceManager.GetString("Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The home page for the package.
        /// </summary>
        public static string Homepage_KeywordDescription {
            get {
                return ResourceManager.GetString("Homepage_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP response was unsuccessful. Status code: {0}.
        /// </summary>
        public static string HttpResponseUnsuccessful_Error {
            get {
                return ResourceManager.GetString("HttpResponseUnsuccessful_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initiating GitHub login....
        /// </summary>
        public static string InitiatingGitHubLogin_Message {
            get {
                return ResourceManager.GetString("InitiatingGitHubLogin_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer target architecture.
        /// </summary>
        public static string InstallerArchitecture_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerArchitecture_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using architecture detected from URL ({0}), overriding architecture detected from binary ({1}).
        /// </summary>
        public static string InstallerBinaryMismatch_Message {
            get {
                return ResourceManager.GetString("InstallerBinaryMismatch_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer cache cleaned..
        /// </summary>
        public static string InstallerCacheCleaned_Message {
            get {
                return ResourceManager.GetString("InstallerCacheCleaned_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} installer detected from the url: {2}.
        /// </summary>
        public static string InstallerDetectedFromUrl_Message {
            get {
                return ResourceManager.GetString("InstallerDetectedFromUrl_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package installer locale.
        /// </summary>
        public static string InstallerLocale_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerLocale_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer manifest preview:.
        /// </summary>
        public static string InstallerManifestPreview_Message {
            get {
                return ResourceManager.GetString("InstallerManifestPreview_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following installers failed to match an existing installer node:.
        /// </summary>
        public static string InstallerMatchFailedError_Message {
            get {
                return ResourceManager.GetString("InstallerMatchFailedError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection of installers.
        /// </summary>
        public static string Installers_KeywordDescription {
            get {
                return ResourceManager.GetString("Installers_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} installers found in {1}.
        /// </summary>
        public static string InstallersFound_Message {
            get {
                return ResourceManager.GetString("InstallersFound_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SHA256 installer hash.
        /// </summary>
        public static string InstallerSha256_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerSha256_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of non-zero installer success exit codes.
        /// </summary>
        public static string InstallerSuccessCodes_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerSuccessCodes_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection of installer switches.
        /// </summary>
        public static string InstallerSwitches_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerSwitches_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer type.
        /// </summary>
        public static string InstallerType_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerType_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer Url(s) used to extract relevant metadata for generating a manifest.
        /// </summary>
        public static string InstallerUrl_HelpText {
            get {
                return ResourceManager.GetString("InstallerUrl_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer URL(s) |e.g. https://microsoft.com/foo.exe, https://microsoft.com/bar.msix|.
        /// </summary>
        public static string InstallerUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallerUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer location redirection path.
        /// </summary>
        public static string InstallLocation_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallLocation_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of supported installer modes.
        /// </summary>
        public static string InstallModes_KeywordDescription {
            get {
                return ResourceManager.GetString("InstallModes_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interactive installer switches.
        /// </summary>
        public static string Interactive_KeywordDescription {
            get {
                return ResourceManager.GetString("Interactive_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cached token was invalid, deleting and launching OAuth flow.
        /// </summary>
        public static string InvalidCachedToken {
            get {
                return ResourceManager.GetString("InvalidCachedToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid token provided, please generate a new GitHub token and try again..
        /// </summary>
        public static string InvalidTokenError_Message {
            get {
                return ResourceManager.GetString("InvalidTokenError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid URL provided. Please check the URL and try again..
        /// </summary>
        public static string InvalidUrl_Error {
            get {
                return ResourceManager.GetString("InvalidUrl_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overrides default language.
        /// </summary>
        public static string Language_KeywordDescription {
            get {
                return ResourceManager.GetString("Language_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launching web browser... If default web browser does not launch, please go to: {0}.
        /// </summary>
        public static string LaunchBrowser_Message {
            get {
                return ResourceManager.GetString("LaunchBrowser_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package license |e.g. MIT License|.
        /// </summary>
        public static string License_KeywordDescription {
            get {
                return ResourceManager.GetString("License_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license page.
        /// </summary>
        public static string LicenseUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("LicenseUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists out all the downloaded installers stored in cache.
        /// </summary>
        public static string List_HelpText {
            get {
                return ResourceManager.GetString("List_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded settings from backup file..
        /// </summary>
        public static string LoadSettingsFromBackup_Message {
            get {
                return ResourceManager.GetString("LoadSettingsFromBackup_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded settings from default factory settings..
        /// </summary>
        public static string LoadSettingsFromDefault_Message {
            get {
                return ResourceManager.GetString("LoadSettingsFromDefault_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package installer locale.
        /// </summary>
        public static string Localization_KeywordDescription {
            get {
                return ResourceManager.GetString("Localization_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer log redirection path.
        /// </summary>
        public static string Log_KeywordDescription {
            get {
                return ResourceManager.GetString("Log_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For information about the restrictions for each field, visit {0}.
        /// </summary>
        public static string ManifestDocumentation_HelpText {
            get {
                return ResourceManager.GetString("ManifestDocumentation_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest saved to {0}.
        /// </summary>
        public static string ManifestSaved_Message {
            get {
                return ResourceManager.GetString("ManifestSaved_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest type.
        /// </summary>
        public static string ManifestType_KeywordDescription {
            get {
                return ResourceManager.GetString("ManifestType_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest validation succeeded: {0}.
        /// </summary>
        public static string ManifestValidationSucceeded_Message {
            get {
                return ResourceManager.GetString("ManifestValidationSucceeded_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest syntax version.
        /// </summary>
        public static string ManifestVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("ManifestVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer minimum operating system version.
        /// </summary>
        public static string MinimumOSVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("MinimumOSVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum version package dependency.
        /// </summary>
        public static string MinimumVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("MinimumVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer minimum operating system version.
        /// </summary>
        public static string MinOSVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("MinOSVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to modify the optional fields?.
        /// </summary>
        public static string ModifyOptionalFields_Message {
            get {
                return ResourceManager.GetString("ModifyOptionalFields_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The most common package term.
        /// </summary>
        public static string Moniker_KeywordDescription {
            get {
                return ResourceManager.GetString("Moniker_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More help can be found at: https://aka.ms/winget-create.
        /// </summary>
        public static string MoreHelp_HelpText {
            get {
                return ResourceManager.GetString("MoreHelp_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating a manifest is only supported with the same number of installer URLs..
        /// </summary>
        public static string MultipleInstallerUpdateDiscrepancy_Error {
            get {
                return ResourceManager.GetString("MultipleInstallerUpdateDiscrepancy_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple existing installer nodes matched the following installer(s):.
        /// </summary>
        public static string MultipleMatchingInstallerNodes_Error {
            get {
                return ResourceManager.GetString("MultipleMatchingInstallerNodes_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package name |e.g. Visual Studio|.
        /// </summary>
        public static string Name_KeywordDescription {
            get {
                return ResourceManager.GetString("Name_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press ENTER to submit the value for each question including accepting the (default) value..
        /// </summary>
        public static string NewCommand_Description {
            get {
                return ResourceManager.GetString("NewCommand_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This tool will walk you through a series of questions to help you create your package manifest..
        /// </summary>
        public static string NewCommand_Header {
            get {
                return ResourceManager.GetString("NewCommand_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launches a series of questions to help generate a new manifest.
        /// </summary>
        public static string NewCommand_HelpText {
            get {
                return ResourceManager.GetString("NewCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each new installer URL must have a match to an existing installer node based on installer type and architecture..
        /// </summary>
        public static string NewInstallerUrlMustMatchExisting_Message {
            get {
                return ResourceManager.GetString("NewInstallerUrlMustMatchExisting_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submitting a manifest without any updated changes is not allowed. .
        /// </summary>
        public static string NoChangeDetectedInUpdatedManifest_Message {
            get {
                return ResourceManager.GetString("NoChangeDetectedInUpdatedManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No token provided, submission to GitHub skipped..
        /// </summary>
        public static string NoTokenProvided_Message {
            get {
                return ResourceManager.GetString("NoTokenProvided_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No token response from GitHub OAuth flow, ending command execution..
        /// </summary>
        public static string NoTokenResponse_Message {
            get {
                return ResourceManager.GetString("NoTokenResponse_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please check the spelling and casing of the package identifier.
        /// </summary>
        public static string OctokitNotFound_Error {
            get {
                return ResourceManager.GetString("OctokitNotFound_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the cache folder storing the downloaded installers.
        /// </summary>
        public static string Open_HelpText {
            get {
                return ResourceManager.GetString("Open_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output directory where the newly created manifests will be saved locally.
        /// </summary>
        public static string OutputDirectory_HelpText {
            get {
                return ResourceManager.GetString("OutputDirectory_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of package dependencies from current source.
        /// </summary>
        public static string PackageDependencies_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageDependencies_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MSIX installer package family name.
        /// </summary>
        public static string PackageFamilyName_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageFamilyName_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We have detected that this package identifier already exists. If you intend to update an existing package, please use the update command..
        /// </summary>
        public static string PackageIdAlreadyExists_Error {
            get {
                return ResourceManager.GetString("PackageIdAlreadyExists_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package identifier used to lookup the existing manifest on the Windows Package Manager repo. Id is case-sensitive..
        /// </summary>
        public static string PackageIdentifier_HelpText {
            get {
                return ResourceManager.GetString("PackageIdentifier_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package unique identifier |e.g. Microsoft.VisualStudio|.
        /// </summary>
        public static string PackageIdentifier_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageIdentifier_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package meta-data locale.
        /// </summary>
        public static string PackageLocale_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageLocale_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package name |e.g. Visual Studio|.
        /// </summary>
        public static string PackageName_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageName_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to successfully parse the package and determine the installer type..
        /// </summary>
        public static string PackageParsing_Error {
            get {
                return ResourceManager.GetString("PackageParsing_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package home page.
        /// </summary>
        public static string PackageUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package version |e.g. 1.2.3.4|.
        /// </summary>
        public static string PackageVersion_KeywordDescription {
            get {
                return ResourceManager.GetString("PackageVersion_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to a manifest file or directory containing the manifests that you want to submit to the Windows Package Manager repo.
        /// </summary>
        public static string Path_HelpText {
            get {
                return ResourceManager.GetString("Path_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path does not exist.
        /// </summary>
        public static string PathDoesNotExist_Warning {
            get {
                return ResourceManager.GetString("PathDoesNotExist_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer platform.
        /// </summary>
        public static string Platform_KeywordDescription {
            get {
                return ResourceManager.GetString("Platform_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Privacy statement: https://aka.ms/privacy.
        /// </summary>
        public static string PrivacyStatement_HelpText {
            get {
                return ResourceManager.GetString("PrivacyStatement_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The publisher privacy page or the package privacy page.
        /// </summary>
        public static string PrivacyUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("PrivacyUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uninstall registry key.
        /// </summary>
        public static string ProductCode_KeywordDescription {
            get {
                return ResourceManager.GetString("ProductCode_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of protocols the package provides a handler for.
        /// </summary>
        public static string Protocols_KeywordDescription {
            get {
                return ResourceManager.GetString("Protocols_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The publisher name |e.g. Microsoft|.
        /// </summary>
        public static string Publisher_KeywordDescription {
            get {
                return ResourceManager.GetString("Publisher_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The publisher support page.
        /// </summary>
        public static string PublisherSupportUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("PublisherSupportUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The publisher home page.
        /// </summary>
        public static string PublisherUrl_KeywordDescription {
            get {
                return ResourceManager.GetString("PublisherUrl_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pull request can be found here: {0}.
        /// </summary>
        public static string PullRequestURI_Message {
            get {
                return ResourceManager.GetString("PullRequestURI_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input does not match the valid format pattern for this field..
        /// </summary>
        public static string RegexFieldValidation_Error {
            get {
                return ResourceManager.GetString("RegexFieldValidation_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository &quot;{0}/{1}&quot; not found. Please verify the Windows Package Manager repository owner and name in your settings file..
        /// </summary>
        public static string RepositoryNotFound_Error {
            get {
                return ResourceManager.GetString("RepositoryNotFound_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of restricted MSIX capabilities.
        /// </summary>
        public static string RestrictedCapabilities_KeywordDescription {
            get {
                return ResourceManager.GetString("RestrictedCapabilities_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resuming command execution....
        /// </summary>
        public static string ResumingCommandExecution_Message {
            get {
                return ResourceManager.GetString("ResumingCommandExecution_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving latest manifest for {0}.
        /// </summary>
        public static string RetrievingManifest_Message {
            get {
                return ResourceManager.GetString("RetrievingManifest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an enumeration of install scope (“User”, “System”).
        /// </summary>
        public static string Scope_KeywordDescription {
            get {
                return ResourceManager.GetString("Scope_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open settings.
        /// </summary>
        public static string SettingsCommand_HelpText {
            get {
                return ResourceManager.GetString("SettingsCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SHA256 installer hash.
        /// </summary>
        public static string Sha256_KeywordDescription {
            get {
                return ResourceManager.GetString("Sha256_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The short package description.
        /// </summary>
        public static string ShortDescription_KeywordDescription {
            get {
                return ResourceManager.GetString("ShortDescription_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MSIX SHA256 signature hash.
        /// </summary>
        public static string SignatureSha256_KeywordDescription {
            get {
                return ResourceManager.GetString("SignatureSha256_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The silent installer switches.
        /// </summary>
        public static string Silent_KeywordDescription {
            get {
                return ResourceManager.GetString("Silent_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The silent with progress installer switches.
        /// </summary>
        public static string SilentWithProgress_KeywordDescription {
            get {
                return ResourceManager.GetString("SilentWithProgress_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping pull request submission....
        /// </summary>
        public static string SkippingPullRequest_Message {
            get {
                return ResourceManager.GetString("SkippingPullRequest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the cached GitHub token. Can specify token to cache with --token parameter, otherwise will initiate OAuth flow..
        /// </summary>
        public static string Store_HelpText {
            get {
                return ResourceManager.GetString("Store_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting cached GitHub token.
        /// </summary>
        public static string StoreToken_Message {
            get {
                return ResourceManager.GetString("StoreToken_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submits a valid manifest directly to the Windows Package Manager repo.
        /// </summary>
        public static string SubmitCommand_HelpText {
            get {
                return ResourceManager.GetString("SubmitCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submitting pull request for manifest....
        /// </summary>
        public static string SubmittingPullRequest_Message {
            get {
                return ResourceManager.GetString("SubmittingPullRequest_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boolean value for submitting to the Windows Package Manager repo. If true, updated manifest will be submitted directly using the provided GitHub Token. Default is false..
        /// </summary>
        public static string SubmitToWinget_HelpText {
            get {
                return ResourceManager.GetString("SubmitToWinget_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection of installer switches.
        /// </summary>
        public static string Switches_KeywordDescription {
            get {
                return ResourceManager.GetString("Switches_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of additional package search terms |e.g. Tag1, Tag2, Tag3|.
        /// </summary>
        public static string Tags_KeywordDescription {
            get {
                return ResourceManager.GetString("Tags_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data is collected by Microsoft and is anonymous..
        /// </summary>
        public static string TelemetryAnonymous_Message {
            get {
                return ResourceManager.GetString("TelemetryAnonymous_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows Package Manager Manifest Creator collects usage data in order to improve your experience..
        /// </summary>
        public static string TelemetryJustification_Message {
            get {
                return ResourceManager.GetString("TelemetryJustification_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telemetry Settings.
        /// </summary>
        public static string TelemetrySettings_Message {
            get {
                return ResourceManager.GetString("TelemetrySettings_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modifies the GitHub auth token cache.
        /// </summary>
        public static string TokenCommand_HelpText {
            get {
                return ResourceManager.GetString("TokenCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User code expired. Generating new user code....
        /// </summary>
        public static string TokenExpired_Message {
            get {
                return ResourceManager.GetString("TokenExpired_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following unbound argument(s) were detected: &quot;{0}&quot;.
        /// </summary>
        public static string UnboundArguments_Message {
            get {
                return ResourceManager.GetString("UnboundArguments_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error while loading settings. Please verify your settings by running the settings command..
        /// </summary>
        public static string UnexpectedErrorLoadSettings_Message {
            get {
                return ResourceManager.GetString("UnexpectedErrorLoadSettings_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade switches.
        /// </summary>
        public static string Update_KeywordDescription {
            get {
                return ResourceManager.GetString("Update_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade method.
        /// </summary>
        public static string UpdateBehavior_KeywordDescription {
            get {
                return ResourceManager.GetString("UpdateBehavior_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates fields of an existing manifest.
        /// </summary>
        public static string UpdateCommand_HelpText {
            get {
                return ResourceManager.GetString("UpdateCommand_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade switches.
        /// </summary>
        public static string Upgrade_KeywordDescription {
            get {
                return ResourceManager.GetString("Upgrade_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade method.
        /// </summary>
        public static string UpgradeBehavior_KeywordDescription {
            get {
                return ResourceManager.GetString("UpgradeBehavior_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installer URL.
        /// </summary>
        public static string Url_KeywordDescription {
            get {
                return ResourceManager.GetString("Url_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using GitHub token from cache....
        /// </summary>
        public static string UsingTokenFromCache_Message {
            get {
                return ResourceManager.GetString("UsingTokenFromCache_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please check and verify the usage of this command by passing in the --help flag..
        /// </summary>
        public static string VerifyCommandUsage_Message {
            get {
                return ResourceManager.GetString("VerifyCommandUsage_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version to be used when updating the package version field..
        /// </summary>
        public static string Version_HelpText {
            get {
                return ResourceManager.GetString("Version_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version manifest preview:.
        /// </summary>
        public static string VersionManifestPreview_Message {
            get {
                return ResourceManager.GetString("VersionManifestPreview_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of Windows feature dependencies.
        /// </summary>
        public static string WindowsFeatures_KeywordDescription {
            get {
                return ResourceManager.GetString("WindowsFeatures_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of Windows library dependencies.
        /// </summary>
        public static string WindowsLibraries_KeywordDescription {
            get {
                return ResourceManager.GetString("WindowsLibraries_KeywordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing the OAuth token to cache failed: {0}.
        /// </summary>
        public static string WritingCacheTokenFailed_Message {
            get {
                return ResourceManager.GetString("WritingCacheTokenFailed_Message", resourceCulture);
            }
        }
    }
}
